| package |
package := Package name: 'Seaside-Email'.
package paxVersion: 1;
	basicComment: ''.

package classNames
	add: #WAEmailBody;
	add: #WAEmailConfiguration;
	add: #WAEmailMessage;
	add: #WAHtmlEmailBody;
	add: #WAMultiPartEmailMessage;
	add: #WAStringEmailBody;
	yourself.

package methodNames
	add: #GRPlatform -> #seasideDeliverEmailMessage:;
	add: #GRPlatform -> #seasideHandlerPreferenceAt:ifAbsent:;
	add: #GRPlatform -> #seasideSmtpPassword;
	add: #GRPlatform -> #seasideSmtpPort;
	add: #GRPlatform -> #seasideSmtpServer;
	add: #GRPlatform -> #seasideSmtpUsername;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\..\Grease\Grease-Core'
	'Seaside-Canvas'
	'Seaside-Core').

package!

"Class Definitions"!

WAObject subclass: #WAEmailBody
	instanceVariableNames: 'contentString'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WAEmailMessage
	instanceVariableNames: 'to from cc bcc subject headers body replyTo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WASystemConfiguration subclass: #WAEmailConfiguration
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAEmailBody subclass: #WAHtmlEmailBody
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAEmailBody subclass: #WAStringEmailBody
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAEmailMessage subclass: #WAMultiPartEmailMessage
	instanceVariableNames: 'parts boundary'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Loose Methods"!

!GRPlatform methodsFor!

seasideDeliverEmailMessage: aWAEmailMessage	self subclassResponsibility!

seasideHandlerPreferenceAt: aKey ifAbsent: aBlock			^ [ WACurrentRequestContext value application preferenceAt: aKey ] "in a Seaside context"		on: WARequestContextNotFound, WAAttributeNotFound 		do: [ :ex | aBlock value ] "not in a Seaside context, treat as absent"!

seasideSmtpPassword	"^ self seasideApplicationPreferenceAt: #smtpPassword ifAbsent: [?]"	self subclassResponsibility!

seasideSmtpPort	"^ self seasideApplicationPreferenceAt: #smtpPort ifAbsent: [?]"	self subclassResponsibility!

seasideSmtpServer		"^ self seasideApplicationPreferenceAt: #smtpServer ifAbsent: [?]"	self subclassResponsibility!

seasideSmtpUsername	"^ self seasideApplicationPreferenceAt: #smtpUsername ifAbsent: [?]"	self subclassResponsibility! !

!GRPlatform categoriesForMethods!
seasideDeliverEmailMessage:!*seaside/email!public! !
seasideHandlerPreferenceAt:ifAbsent:!*seaside/email!public! !
seasideSmtpPassword!*seaside/email!public! !
seasideSmtpPort!*seaside/email!public! !
seasideSmtpServer!*seaside/email!public! !
seasideSmtpUsername!*seaside/email!public! !
!

"End of package definition"!

