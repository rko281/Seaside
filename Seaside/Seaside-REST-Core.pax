| package |
package := Package name: 'Seaside-REST-Core'.
package paxVersion: 1;
	basicComment: ''.

package classNames
	add: #WAArgumentNotFoundError;
	add: #WAByMethodRoutes;
	add: #WAComplexRoute;
	add: #WACompositeMimeTypeMatch;
	add: #WAExactParameterMatch;
	add: #WAExactPathMatch;
	add: #WAFullMimeTypeMatch;
	add: #WAFullPlaceholderPathMatch;
	add: #WAMainMimeTypeMatch;
	add: #WAMatch;
	add: #WAMimeTypeMatch;
	add: #WAMultiPlaceholderPathMatch;
	add: #WAOrPathMatch;
	add: #WAParameterMatch;
	add: #WAPlaceholderParameterMatch;
	add: #WAPlaceholderPathMatch;
	add: #WAPPathMatch;
	add: #WAPrefixPlaceholderPathMatch;
	add: #WARestfulComponentFilter;
	add: #WARestfulConfiguration;
	add: #WARestfulFilter;
	add: #WARestfulHandler;
	add: #WARoute;
	add: #WARouteBuilder;
	add: #WARouteContainer;
	add: #WARouteResult;
	add: #WASimpleRoute;
	add: #WASortedAccepts;
	add: #WASubMimeTypeMatch;
	add: #WASuffixPlaceholderPathMatch;
	add: #WAWildcardMimeTypeMatch;
	yourself.

package methodNames
	add: #GRPlatform -> #argumentNamesOf:;
	add: #GRPlatform -> #createRoutesFor:;
	add: #GRPlatform -> #createRoutesFrom:to:;
	add: #GRPlatform -> #selectorOfPragma:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\..\Grease\Grease-Core'
	'..\..\Portishead\Portishead-Pragmas'
	'Seaside-Core').

package!

"Class Definitions"!

WAError subclass: #WAArgumentNotFoundError
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WAByMethodRoutes
	instanceVariableNames: 'fixedContainers flexibleContainers'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WAMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WARoute
	instanceVariableNames: 'method selector produces consumes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WARouteBuilder
	instanceVariableNames: 'compiled method path produces consumes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'configuration'!

WAObject subclass: #WARouteContainer
	instanceVariableNames: 'pathElementCount routes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WARouteResult
	instanceVariableNames: 'route elements parameters'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAObject subclass: #WASortedAccepts
	instanceVariableNames: 'accepts'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WASystemConfiguration subclass: #WARestfulConfiguration
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMatch subclass: #WACompositeMimeTypeMatch
	instanceVariableNames: 'matches'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMatch subclass: #WAMimeTypeMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMatch subclass: #WAParameterMatch
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMatch subclass: #WAPPathMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMimeTypeMatch subclass: #WAFullMimeTypeMatch
	instanceVariableNames: 'main sub'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMimeTypeMatch subclass: #WAMainMimeTypeMatch
	instanceVariableNames: 'main'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMimeTypeMatch subclass: #WASubMimeTypeMatch
	instanceVariableNames: 'sub'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAMimeTypeMatch subclass: #WAWildcardMimeTypeMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAParameterMatch subclass: #WAExactParameterMatch
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAParameterMatch subclass: #WAPlaceholderParameterMatch
	instanceVariableNames: 'index'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPPathMatch subclass: #WAExactPathMatch
	instanceVariableNames: 'element'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPPathMatch subclass: #WAOrPathMatch
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPPathMatch subclass: #WAPlaceholderPathMatch
	instanceVariableNames: 'sourceIndex targetIndex'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPlaceholderPathMatch subclass: #WAFullPlaceholderPathMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPlaceholderPathMatch subclass: #WAMultiPlaceholderPathMatch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPlaceholderPathMatch subclass: #WAPrefixPlaceholderPathMatch
	instanceVariableNames: 'prefix'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WAPlaceholderPathMatch subclass: #WASuffixPlaceholderPathMatch
	instanceVariableNames: 'suffix'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WARequestFilter subclass: #WARestfulFilter
	instanceVariableNames: 'routes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WARestfulFilter subclass: #WARestfulComponentFilter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WARequestHandler subclass: #WARestfulHandler
	instanceVariableNames: 'routes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WARoute subclass: #WAComplexRoute
	instanceVariableNames: 'pathMatches parameterMatches isOverlyComplex'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

WARoute subclass: #WASimpleRoute
	instanceVariableNames: 'count'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Loose Methods"!

!GRPlatform methodsFor!

argumentNamesOf: aCompiledMethod	"Answer the argument names of a method as a sequenceable collection of strings. The default implementation does not support this call."	^ #()!

createRoutesFor: aClass	^ WARouteBuilder createRoutesFor: aClass!

createRoutesFrom: aClass to: aSuperClass	^ WARouteBuilder createRoutesFrom: aClass to: aSuperClass!

selectorOfPragma: aPragma	^ self subclassResponsibility! !

!GRPlatform categoriesForMethods!
argumentNamesOf:!*seaside/rest/core!public! !
createRoutesFor:!*seaside/rest/core!public! !
createRoutesFrom:to:!*seaside/rest/core!public! !
selectorOfPragma:!*Seaside/REST/Core!public! !
!

"End of package definition"!

