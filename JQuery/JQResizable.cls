"Filed out from Dolphin Smalltalk 7"!

JQWidget subclass: #JQResizable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
JQResizable guid: (GUID fromString: '{37522ca2-eb13-4de0-8105-51b2cac33d81}')!
JQResizable comment: 'Creates new resizables on the nodeset supplied by the query.'!
!JQResizable categoriesForClass!JQuery-UI-Interaction! !
!JQResizable methodsFor!

alsoResize: aSelectorOrjQueryOrElement	"Resize these elements synchronous when resizing."	self optionAt: 'alsoResize' put: aSelectorOrjQueryOrElement!

animate: aBoolean	"Animates to the final size after resizing."	self optionAt: 'animate' put: aBoolean!

animateDuration: anIntegerOrString	"Duration time for animating, in milliseconds. Other possible values: 'slow', 'normal', 'fast'."	self optionAt: 'animateDuration' put: anIntegerOrString!

animateEasing: aString	"Easing effect for animating."	self optionAt: 'animateEasing' put: aString!

aspectRatio: aBooleanOrFloat	"If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5."	self optionAt: 'aspectRatio' put: aBooleanOrFloat!

autoHide: aBoolean	"If set to true, automatically hides the handles except when the mouse hovers over the element."	self optionAt: 'autoHide' put: aBoolean!

cancel: aSelector	"Prevents resizing if you start on elements matching the selector."	self optionAt: 'cancel' put: aSelector!

containment: aStringOrElementOrSelector	"Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector."	self optionAt: 'containment' put: aStringOrElementOrSelector!

delay: anInteger	"Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element."	self optionAt: 'delay' put: anInteger!

distance: anInteger	"Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element."	self optionAt: 'distance' put: anInteger!

ghost: aBoolean	"If set to true, a semi-transparent helper element is shown for resizing."	self optionAt: 'ghost' put: aBoolean!

grid: anArray	"Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]"	self optionAt: 'grid' put: anArray!

handles: aStringOrObject	"If specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin. If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly."	self optionAt: 'handles' put: aStringOrObject!

helper: aString	"This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized."	self optionAt: 'helper' put: aString!

maxHeight: anInteger	"This is the maximum height the resizable should be allowed to resize to."	self optionAt: 'maxHeight' put: anInteger!

maxWidth: anInteger	"This is the maximum width the resizable should be allowed to resize to."	self optionAt: 'maxWidth' put: anInteger!

method	^ 'resizable'!

minHeight: anInteger	"This is the minimum height the resizable should be allowed to resize to."	self optionAt: 'minHeight' put: anInteger!

minWidth: anInteger	"This is the minimum width the resizable should be allowed to resize to."	self optionAt: 'minWidth' put: anInteger!

onResize: anObject	"This event is triggered during the resize, on the drag of the resize handler."	self optionAt: 'resize' put: anObject asFunction!

onStart: anObject	"This event is triggered at the start of a resize operation."	self optionAt: 'start' put: anObject asFunction!

onStop: anObject	"This event is triggered at the end of a resize operation."	self optionAt: 'stop' put: anObject asFunction! !
!JQResizable categoriesFor: #alsoResize:!options/generated!public! !
!JQResizable categoriesFor: #animate:!options/generated!public! !
!JQResizable categoriesFor: #animateDuration:!options/generated!public! !
!JQResizable categoriesFor: #animateEasing:!options/generated!public! !
!JQResizable categoriesFor: #aspectRatio:!options/generated!public! !
!JQResizable categoriesFor: #autoHide:!options/generated!public! !
!JQResizable categoriesFor: #cancel:!options/generated!public! !
!JQResizable categoriesFor: #containment:!options/generated!public! !
!JQResizable categoriesFor: #delay:!options/generated!public! !
!JQResizable categoriesFor: #distance:!options/generated!public! !
!JQResizable categoriesFor: #ghost:!options/generated!public! !
!JQResizable categoriesFor: #grid:!options/generated!public! !
!JQResizable categoriesFor: #handles:!options/generated!public! !
!JQResizable categoriesFor: #helper:!options/generated!public! !
!JQResizable categoriesFor: #maxHeight:!options/generated!public! !
!JQResizable categoriesFor: #maxWidth:!options/generated!public! !
!JQResizable categoriesFor: #method!accessing!public! !
!JQResizable categoriesFor: #minHeight:!options/generated!public! !
!JQResizable categoriesFor: #minWidth:!options/generated!public! !
!JQResizable categoriesFor: #onResize:!events/generated!public! !
!JQResizable categoriesFor: #onStart:!events/generated!public! !
!JQResizable categoriesFor: #onStop:!events/generated!public! !

